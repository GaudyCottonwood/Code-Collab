{"ast":null,"code":"var _jsxFileName = \"C:\\\\Rohin_Gaudycottonwood\\\\college_personal\\\\projects\\\\Code-Collab\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css'; // Make sure you have this CSS file\nimport io from 'socket.io-client';\nimport Editor from '@monaco-editor/react'; // For desktop\nimport SimpleEditor from 'react-simple-code-editor'; // For mobile\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-clike'; // For C, C++, etc.\nimport 'prismjs/themes/prism.css'; // Default Prism theme\n\n// Configuration for the server connection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_PORT = 3001; // Ensure this matches your server configuration\nconst SERVER_URL = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\nconst socket = io(SERVER_URL, {\n  transports: ['websocket', 'polling'] // Explicitly define transports\n});\nconst ROOM = 'default'; // Default room for collaboration\n\n// Language configuration\nconst languageOptions = [{\n  value: 'python',\n  label: 'Python',\n  prismLang: 'python',\n  monacoLang: 'python',\n  comment: '# Write Python code here'\n}, {\n  value: 'javascript',\n  label: 'JavaScript',\n  prismLang: 'javascript',\n  monacoLang: 'javascript',\n  comment: '// Write JavaScript code here'\n}, {\n  value: 'c',\n  label: 'C',\n  prismLang: 'clike',\n  monacoLang: 'c',\n  comment: '// Write C code here'\n}\n// Add more languages here if needed, e.g.,\n// { value: 'cpp', label: 'C++', prismLang: 'clike', monacoLang: 'cpp', comment: '// Write C++ code here' },\n// { value: 'java', label: 'Java', prismLang: 'java', monacoLang: 'java', comment: '// Write Java code here' },\n];\nexport default function App() {\n  _s();\n  // State variables\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [running, setRunning] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0].value); // Default to Python\n  const [serverIp, setServerIp] = useState('your_server_ip'); // To display connection info\n\n  // Refs\n  const fileInputRef = useRef(null);\n\n  // Mobile detection\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  // Effect for socket event listeners\n  useEffect(() => {\n    // Join the default room on component mount\n    socket.emit('join', ROOM);\n\n    // Listener for initial code and server IP from the server\n    socket.on('init', ({\n      code: initialCode,\n      ip\n    }) => {\n      setServerIp(ip || window.location.hostname); // Store server IP\n      const currentLangConfig = languageOptions.find(lang => lang.value === selectedLanguage) || languageOptions[0];\n      const initialComment = `# Connect at http://${ip || window.location.hostname}:${SERVER_PORT}\\n# Language: ${currentLangConfig.label}\\n\\n${currentLangConfig.comment}`;\n      // Only set initial code if current code is empty or default placeholder\n      setCode(prevCode => {\n        const placeholderRegex = /(# Write Python code here|# Language:.*|\\/\\/ Write JavaScript code here|\\/\\/ Write C code here)/i;\n        if (!prevCode || placeholderRegex.test(prevCode)) {\n          return initialCode ? initialCode.replace(/^# Write Python code here/i, initialComment) : initialComment;\n        }\n        return prevCode;\n      });\n    });\n\n    // Listener for code updates from other clients\n    socket.on('code', updatedCode => {\n      setCode(updatedCode);\n    });\n\n    // Listener for output from code execution\n    socket.on('output', data => {\n      setOutput(prevOutput => prevOutput + data);\n    });\n\n    // Listener for when code execution is done\n    socket.on('done', () => {\n      setRunning(false);\n    });\n\n    // Listener for updates to the list of shared files\n    socket.on('file-list', fileList => {\n      setFiles(fileList);\n    });\n\n    // Cleanup listeners on component unmount\n    return () => {\n      socket.off('init');\n      socket.off('code');\n      socket.off('output');\n      socket.off('done');\n      socket.off('file-list');\n      // Consider if socket.disconnect() is appropriate here or if it should persist\n      // If App is the main component, disconnecting might be fine.\n    };\n  }, [selectedLanguage]); // Rerun effect if selectedLanguage changes to update initial comment logic\n\n  // Handler for language selection change\n  const handleLanguageChange = newLanguageValue => {\n    setSelectedLanguage(newLanguageValue);\n    const newLangConfig = languageOptions.find(lang => lang.value === newLanguageValue);\n    if (newLangConfig) {\n      // Update the placeholder comment based on the new language\n      const initialComment = `# Connect at http://${serverIp}:${SERVER_PORT}\\n# Language: ${newLangConfig.label}\\n\\n${newLangConfig.comment}`;\n      setCode(initialComment); // Set new boilerplate for the language\n      socket.emit('code', {\n        room: ROOM,\n        value: initialComment\n      }); // Sync with others\n    }\n  };\n\n  // Handler for editor content change\n  const handleEditorChange = value => {\n    setCode(value);\n    socket.emit('code', {\n      room: ROOM,\n      value\n    }); // Send code changes to server/other clients\n  };\n\n  // Handler for running the code\n  const runCode = () => {\n    setOutput(''); // Clear previous output\n    setRunning(true);\n    // Emit 'compile' event with current code and selected language\n    socket.emit('compile', {\n      room: ROOM,\n      language: selectedLanguage,\n      code\n    });\n  };\n\n  // Handler for uploading a file\n  const uploadFile = async file => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch(`${SERVER_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed with status: ${response.status}`);\n      }\n      // Optionally, refresh file list or wait for socket event\n      if (fileInputRef.current) fileInputRef.current.value = ''; // Clear file input\n    } catch (err) {\n      console.error('Upload failed:', err);\n      setOutput(prev => prev + `Error uploading file: ${err.message}\\n`);\n    }\n  };\n\n  // Handler for file input change\n  const onFileInputChange = e => {\n    const file = e.target.files && e.target.files[0];\n    if (file) {\n      uploadFile(file);\n    }\n  };\n\n  // Handler for clearing all uploaded files on the server\n  const clearFiles = async () => {\n    try {\n      const response = await fetch(`${SERVER_URL}/clear-files`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Clear files failed with status: ${response.status}`);\n      }\n      setOutput(''); // Clear output panel as well\n      // File list should update via socket event 'file-list' from server\n    } catch (err) {\n      console.error('Clear files failed:', err);\n      setOutput(prev => prev + `Error clearing files: ${err.message}\\n`);\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragOver = e => {\n    e.preventDefault(); // Necessary to allow dropping\n    setDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragging(false);\n    const droppedFile = e.dataTransfer.files && e.dataTransfer.files[0];\n    if (droppedFile) {\n      uploadFile(droppedFile);\n    }\n  };\n\n  // Determine current language configuration for editor props\n  const currentLanguageConfig = languageOptions.find(lang => lang.value === selectedLanguage) || languageOptions[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-split\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-pane\",\n        children: isMobile ? /*#__PURE__*/_jsxDEV(SimpleEditor, {\n          value: code,\n          onValueChange: handleEditorChange,\n          highlight: editorCode => {\n            // Ensure prismLang exists and language is loaded\n            const langGrammar = languages[currentLanguageConfig.prismLang];\n            if (langGrammar) {\n              return highlight(editorCode, langGrammar, currentLanguageConfig.prismLang);\n            }\n            return editorCode; // Fallback if language not found\n          },\n          padding: 12,\n          style: {\n            width: '100%',\n            height: '100%',\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n            fontSize: 14,\n            border: '1px solid #ddd',\n            // Visual separation\n            overflowY: 'auto' // Ensure scrolling\n          },\n          textareaClassName: \"editor-textarea\" // For further specific styling if needed\n          ,\n          preClassName: \"editor-pre\" // For further specific styling if needed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\" // Use full height of parent\n          ,\n          language: currentLanguageConfig.monacoLang,\n          value: code,\n          onChange: handleEditorChange,\n          theme: \"vs-dark\" // Monaco editor theme\n          ,\n          options: {\n            selectOnLineNumbers: true,\n            minimap: {\n              enabled: true\n            },\n            fontSize: 14,\n            wordWrap: 'on' // Enable word wrapping\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-pane\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedLanguage,\n        onChange: e => handleLanguageChange(e.target.value),\n        className: \"language-select\",\n        children: languageOptions.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lang.value,\n          children: lang.label\n        }, lang.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runCode,\n        disabled: running,\n        className: \"control-button run-button\",\n        children: running ? '…Running' : 'Run Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: onFileInputChange,\n        style: {\n          display: 'none'\n        },\n        id: \"fileUploadInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current && fileInputRef.current.click(),\n        className: \"control-button upload-button\",\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFiles,\n        className: \"control-button clear-button\",\n        children: \"Clear Uploads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `shared-files${dragging ? ' drag-over' : ''}`,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Shared Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${SERVER_URL}${f.url}`,\n            download: f.originalname,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [f.originalname, \" (\", f.size ? (f.size / 1024).toFixed(2) + ' KB' : 'N/A', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files shared yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-hint\",\n        children: dragging ? 'Release to upload file' : 'Drag & drop a file here, or use the \"Select File\" button.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A+DpEKUleR0SPYBeFDpKM5NXL+Y=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Editor","SimpleEditor","highlight","languages","jsxDEV","_jsxDEV","SERVER_PORT","SERVER_URL","window","location","protocol","hostname","socket","transports","ROOM","languageOptions","value","label","prismLang","monacoLang","comment","App","_s","code","setCode","output","setOutput","running","setRunning","files","setFiles","dragging","setDragging","selectedLanguage","setSelectedLanguage","serverIp","setServerIp","fileInputRef","isMobile","test","navigator","userAgent","emit","on","initialCode","ip","currentLangConfig","find","lang","initialComment","prevCode","placeholderRegex","replace","updatedCode","data","prevOutput","fileList","off","handleLanguageChange","newLanguageValue","newLangConfig","room","handleEditorChange","runCode","language","uploadFile","file","formData","FormData","append","response","fetch","method","body","ok","Error","status","current","err","console","error","prev","message","onFileInputChange","e","target","clearFiles","handleDragOver","preventDefault","handleDragLeave","handleDrop","droppedFile","dataTransfer","currentLanguageConfig","className","children","onValueChange","editorCode","langGrammar","padding","style","width","height","fontFamily","fontSize","border","overflowY","textareaClassName","preClassName","fileName","_jsxFileName","lineNumber","columnNumber","onChange","theme","options","selectOnLineNumbers","minimap","enabled","wordWrap","map","onClick","disabled","type","ref","display","id","click","onDragOver","onDragLeave","onDrop","length","f","i","href","url","download","originalname","rel","size","toFixed","_c","$RefreshReg$"],"sources":["C:/Rohin_Gaudycottonwood/college_personal/projects/Code-Collab/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css'; // Make sure you have this CSS file\r\nimport io from 'socket.io-client';\r\nimport Editor from '@monaco-editor/react'; // For desktop\r\nimport SimpleEditor from 'react-simple-code-editor'; // For mobile\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-python';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-clike'; // For C, C++, etc.\r\nimport 'prismjs/themes/prism.css'; // Default Prism theme\r\n\r\n// Configuration for the server connection\r\nconst SERVER_PORT = 3001; // Ensure this matches your server configuration\r\nconst SERVER_URL = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\r\nconst socket = io(SERVER_URL, {\r\n  transports: ['websocket', 'polling'], // Explicitly define transports\r\n});\r\nconst ROOM = 'default'; // Default room for collaboration\r\n\r\n// Language configuration\r\nconst languageOptions = [\r\n  { value: 'python', label: 'Python', prismLang: 'python', monacoLang: 'python', comment: '# Write Python code here' },\r\n  { value: 'javascript', label: 'JavaScript', prismLang: 'javascript', monacoLang: 'javascript', comment: '// Write JavaScript code here' },\r\n  { value: 'c', label: 'C', prismLang: 'clike', monacoLang: 'c', comment: '// Write C code here' },\r\n  // Add more languages here if needed, e.g.,\r\n  // { value: 'cpp', label: 'C++', prismLang: 'clike', monacoLang: 'cpp', comment: '// Write C++ code here' },\r\n  // { value: 'java', label: 'Java', prismLang: 'java', monacoLang: 'java', comment: '// Write Java code here' },\r\n];\r\n\r\nexport default function App() {\r\n  // State variables\r\n  const [code, setCode] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [running, setRunning] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0].value); // Default to Python\r\n  const [serverIp, setServerIp] = useState('your_server_ip'); // To display connection info\r\n\r\n  // Refs\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Mobile detection\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n  // Effect for socket event listeners\r\n  useEffect(() => {\r\n    // Join the default room on component mount\r\n    socket.emit('join', ROOM);\r\n\r\n    // Listener for initial code and server IP from the server\r\n    socket.on('init', ({ code: initialCode, ip }) => {\r\n      setServerIp(ip || window.location.hostname); // Store server IP\r\n      const currentLangConfig = languageOptions.find(lang => lang.value === selectedLanguage) || languageOptions[0];\r\n      const initialComment = `# Connect at http://${ip || window.location.hostname}:${SERVER_PORT}\\n# Language: ${currentLangConfig.label}\\n\\n${currentLangConfig.comment}`;\r\n      // Only set initial code if current code is empty or default placeholder\r\n      setCode(prevCode => {\r\n        const placeholderRegex = /(# Write Python code here|# Language:.*|\\/\\/ Write JavaScript code here|\\/\\/ Write C code here)/i;\r\n        if (!prevCode || placeholderRegex.test(prevCode)) {\r\n          return initialCode ? initialCode.replace(/^# Write Python code here/i, initialComment) : initialComment;\r\n        }\r\n        return prevCode;\r\n      });\r\n    });\r\n\r\n    // Listener for code updates from other clients\r\n    socket.on('code', (updatedCode) => {\r\n      setCode(updatedCode);\r\n    });\r\n\r\n    // Listener for output from code execution\r\n    socket.on('output', (data) => {\r\n      setOutput(prevOutput => prevOutput + data);\r\n    });\r\n\r\n    // Listener for when code execution is done\r\n    socket.on('done', () => {\r\n      setRunning(false);\r\n    });\r\n\r\n    // Listener for updates to the list of shared files\r\n    socket.on('file-list', (fileList) => {\r\n      setFiles(fileList);\r\n    });\r\n\r\n    // Cleanup listeners on component unmount\r\n    return () => {\r\n      socket.off('init');\r\n      socket.off('code');\r\n      socket.off('output');\r\n      socket.off('done');\r\n      socket.off('file-list');\r\n      // Consider if socket.disconnect() is appropriate here or if it should persist\r\n      // If App is the main component, disconnecting might be fine.\r\n    };\r\n  }, [selectedLanguage]); // Rerun effect if selectedLanguage changes to update initial comment logic\r\n\r\n  // Handler for language selection change\r\n  const handleLanguageChange = (newLanguageValue) => {\r\n    setSelectedLanguage(newLanguageValue);\r\n    const newLangConfig = languageOptions.find(lang => lang.value === newLanguageValue);\r\n    if (newLangConfig) {\r\n      // Update the placeholder comment based on the new language\r\n      const initialComment = `# Connect at http://${serverIp}:${SERVER_PORT}\\n# Language: ${newLangConfig.label}\\n\\n${newLangConfig.comment}`;\r\n      setCode(initialComment); // Set new boilerplate for the language\r\n      socket.emit('code', { room: ROOM, value: initialComment }); // Sync with others\r\n    }\r\n  };\r\n\r\n  // Handler for editor content change\r\n  const handleEditorChange = (value) => {\r\n    setCode(value);\r\n    socket.emit('code', { room: ROOM, value }); // Send code changes to server/other clients\r\n  };\r\n\r\n  // Handler for running the code\r\n  const runCode = () => {\r\n    setOutput(''); // Clear previous output\r\n    setRunning(true);\r\n    // Emit 'compile' event with current code and selected language\r\n    socket.emit('compile', { room: ROOM, language: selectedLanguage, code });\r\n  };\r\n\r\n  // Handler for uploading a file\r\n  const uploadFile = async (file) => {\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Upload failed with status: ${response.status}`);\r\n      }\r\n      // Optionally, refresh file list or wait for socket event\r\n      if (fileInputRef.current) fileInputRef.current.value = ''; // Clear file input\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setOutput(prev => prev + `Error uploading file: ${err.message}\\n`);\r\n    }\r\n  };\r\n\r\n  // Handler for file input change\r\n  const onFileInputChange = (e) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    if (file) {\r\n      uploadFile(file);\r\n    }\r\n  };\r\n\r\n  // Handler for clearing all uploaded files on the server\r\n  const clearFiles = async () => {\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/clear-files`, { method: 'DELETE' });\r\n      if (!response.ok) {\r\n        throw new Error(`Clear files failed with status: ${response.status}`);\r\n      }\r\n      setOutput(''); // Clear output panel as well\r\n      // File list should update via socket event 'file-list' from server\r\n    } catch (err) {\r\n      console.error('Clear files failed:', err);\r\n      setOutput(prev => prev + `Error clearing files: ${err.message}\\n`);\r\n    }\r\n  };\r\n\r\n  // Drag and drop handlers\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault(); // Necessary to allow dropping\r\n    setDragging(true);\r\n  };\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    setDragging(false);\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setDragging(false);\r\n    const droppedFile = e.dataTransfer.files && e.dataTransfer.files[0];\r\n    if (droppedFile) {\r\n      uploadFile(droppedFile);\r\n    }\r\n  };\r\n\r\n  // Determine current language configuration for editor props\r\n  const currentLanguageConfig = languageOptions.find(lang => lang.value === selectedLanguage) || languageOptions[0];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Top section with editor and output panes */}\r\n      <div className=\"top-split\">\r\n        <div className=\"editor-pane\">\r\n          {isMobile ? (\r\n            <SimpleEditor\r\n              value={code}\r\n              onValueChange={handleEditorChange}\r\n              highlight={(editorCode) => {\r\n                // Ensure prismLang exists and language is loaded\r\n                const langGrammar = languages[currentLanguageConfig.prismLang];\r\n                if (langGrammar) {\r\n                  return highlight(editorCode, langGrammar, currentLanguageConfig.prismLang);\r\n                }\r\n                return editorCode; // Fallback if language not found\r\n              }}\r\n              padding={12}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                fontSize: 14,\r\n                border: '1px solid #ddd', // Visual separation\r\n                overflowY: 'auto', // Ensure scrolling\r\n              }}\r\n              textareaClassName=\"editor-textarea\" // For further specific styling if needed\r\n              preClassName=\"editor-pre\" // For further specific styling if needed\r\n            />\r\n          ) : (\r\n            <Editor\r\n              height=\"100%\" // Use full height of parent\r\n              language={currentLanguageConfig.monacoLang}\r\n              value={code}\r\n              onChange={handleEditorChange}\r\n              theme=\"vs-dark\" // Monaco editor theme\r\n              options={{\r\n                selectOnLineNumbers: true,\r\n                minimap: { enabled: true },\r\n                fontSize: 14,\r\n                wordWrap: 'on', // Enable word wrapping\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"output-pane\">\r\n          <pre>{output}</pre> {/* Display code execution output */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls section for language selection, run, file operations */}\r\n      <div className=\"controls\">\r\n        <select\r\n          value={selectedLanguage}\r\n          onChange={(e) => handleLanguageChange(e.target.value)}\r\n          className=\"language-select\"\r\n        >\r\n          {languageOptions.map(lang => (\r\n            <option key={lang.value} value={lang.value}>\r\n              {lang.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={runCode} disabled={running} className=\"control-button run-button\">\r\n          {running ? '…Running' : 'Run Code'}\r\n        </button>\r\n        {/* Hidden file input, triggered by a button */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={onFileInputChange}\r\n          style={{ display: 'none' }}\r\n          id=\"fileUploadInput\"\r\n        />\r\n        <button\r\n          onClick={() => fileInputRef.current && fileInputRef.current.click()}\r\n          className=\"control-button upload-button\"\r\n        >\r\n          Select File\r\n        </button>\r\n        {/* Upload button is implicitly handled by onFileInputChange, or you can add a separate one */}\r\n        {/* This button could be used if you want to select then click upload */}\r\n        {/* <button\r\n          onClick={() => {\r\n            if (fileInputRef.current && fileInputRef.current.files && fileInputRef.current.files[0]) {\r\n              uploadFile(fileInputRef.current.files[0]);\r\n            }\r\n          }}\r\n          disabled={!fileInputRef.current?.files?.length} // Disable if no file selected in ref\r\n          className=\"control-button\"\r\n        >\r\n          Upload Selected\r\n        </button> */}\r\n        <button onClick={clearFiles} className=\"control-button clear-button\">\r\n          Clear Uploads\r\n        </button>\r\n      </div>\r\n\r\n      {/* Shared files section with drag and drop */}\r\n      <div\r\n        className={`shared-files${dragging ? ' drag-over' : ''}`}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n      >\r\n        <h4>Shared Files</h4>\r\n        {files.length > 0 ? (\r\n          <ul>\r\n            {files.map((f, i) => (\r\n              <li key={i}>\r\n                <a href={`${SERVER_URL}${f.url}`} download={f.originalname} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {f.originalname} ({f.size ? (f.size / 1024).toFixed(2) + ' KB' : 'N/A'})\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No files shared yet.</p>\r\n        )}\r\n        <p className=\"drop-hint\">\r\n          {dragging\r\n            ? 'Release to upload file'\r\n            : 'Drag & drop a file here, or use the \"Select File\" button.'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}