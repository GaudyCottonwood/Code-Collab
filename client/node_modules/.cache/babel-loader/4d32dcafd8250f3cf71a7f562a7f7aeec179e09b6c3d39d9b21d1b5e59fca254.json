{"ast":null,"code":"var _jsxFileName = \"C:\\\\Rohin_Gaudycottonwood\\\\college_personal\\\\projects\\\\Code-Collab\\\\client\\\\src\\\\index.js\";\n// src/index.js\n\n// 0) Silence only the ResizeObserver loop error in console\nconst _origConsoleError = console.error;\nconsole.error = (...args) => {\n  if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop completed with undelivered notifications')) {\n    return; // drop it\n  }\n  _origConsoleError(...args);\n};\n\n// 1) Monkey-patch ResizeObserver as before\nconst NativeRO = window.ResizeObserver;\nwindow.ResizeObserver = class {\n  constructor(cb) {\n    const wrapped = entries => {\n      try {\n        cb(entries);\n      } catch (err) {\n        if (!err.message.includes('ResizeObserver loop completed')) throw err;\n      }\n    };\n    this._ro = new NativeRO(wrapped);\n  }\n  observe(t, o) {\n    this._ro.observe(t, o);\n  }\n  unobserve(t) {\n    this._ro.unobserve(t);\n  }\n  disconnect() {\n    this._ro.disconnect();\n  }\n};\n\n// 2) Suppress other benign errors\nwindow.addEventListener('error', e => {\n  const m = e.message || '';\n  if (m === 'Script error.' || m.includes('Canceled')) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n});\nwindow.addEventListener('unhandledrejection', e => {\n  const m = e.reason && e.reason.message || '';\n  if (m === 'Script error.' || m.includes('Canceled')) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n});\n\n// 3) Now import and render your App\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["_origConsoleError","console","error","args","includes","NativeRO","window","ResizeObserver","constructor","cb","wrapped","entries","err","message","_ro","observe","t","o","unobserve","disconnect","addEventListener","e","m","preventDefault","stopImmediatePropagation","reason","React","createRoot","App","jsxDEV","_jsxDEV","root","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Rohin_Gaudycottonwood/college_personal/projects/Code-Collab/client/src/index.js"],"sourcesContent":["// src/index.js\r\n\r\n// 0) Silence only the ResizeObserver loop error in console\r\nconst _origConsoleError = console.error;\r\nconsole.error = (...args) => {\r\n  if (\r\n    typeof args[0] === 'string' &&\r\n    args[0].includes('ResizeObserver loop completed with undelivered notifications')\r\n  ) {\r\n    return; // drop it\r\n  }\r\n  _origConsoleError(...args);\r\n};\r\n\r\n// 1) Monkey-patch ResizeObserver as before\r\nconst NativeRO = window.ResizeObserver;\r\nwindow.ResizeObserver = class {\r\n  constructor(cb) {\r\n    const wrapped = entries => {\r\n      try { cb(entries); }\r\n      catch (err) {\r\n        if (!err.message.includes('ResizeObserver loop completed')) throw err;\r\n      }\r\n    };\r\n    this._ro = new NativeRO(wrapped);\r\n  }\r\n  observe(t,o){ this._ro.observe(t,o); }\r\n  unobserve(t){ this._ro.unobserve(t); }\r\n  disconnect(){ this._ro.disconnect(); }\r\n};\r\n\r\n// 2) Suppress other benign errors\r\nwindow.addEventListener('error', e => {\r\n  const m = e.message || '';\r\n  if (m === 'Script error.' || m.includes('Canceled')) {\r\n    e.preventDefault(); e.stopImmediatePropagation();\r\n  }\r\n});\r\nwindow.addEventListener('unhandledrejection', e => {\r\n  const m = (e.reason && e.reason.message) || '';\r\n  if (m === 'Script error.' || m.includes('Canceled')) {\r\n    e.preventDefault(); e.stopImmediatePropagation();\r\n  }\r\n});\r\n\r\n// 3) Now import and render your App\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"mappings":";AAAA;;AAEA;AACA,MAAMA,iBAAiB,GAAGC,OAAO,CAACC,KAAK;AACvCD,OAAO,CAACC,KAAK,GAAG,CAAC,GAAGC,IAAI,KAAK;EAC3B,IACE,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC3BA,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,8DAA8D,CAAC,EAChF;IACA,OAAO,CAAC;EACV;EACAJ,iBAAiB,CAAC,GAAGG,IAAI,CAAC;AAC5B,CAAC;;AAED;AACA,MAAME,QAAQ,GAAGC,MAAM,CAACC,cAAc;AACtCD,MAAM,CAACC,cAAc,GAAG,MAAM;EAC5BC,WAAWA,CAACC,EAAE,EAAE;IACd,MAAMC,OAAO,GAAGC,OAAO,IAAI;MACzB,IAAI;QAAEF,EAAE,CAACE,OAAO,CAAC;MAAE,CAAC,CACpB,OAAOC,GAAG,EAAE;QACV,IAAI,CAACA,GAAG,CAACC,OAAO,CAACT,QAAQ,CAAC,+BAA+B,CAAC,EAAE,MAAMQ,GAAG;MACvE;IACF,CAAC;IACD,IAAI,CAACE,GAAG,GAAG,IAAIT,QAAQ,CAACK,OAAO,CAAC;EAClC;EACAK,OAAOA,CAACC,CAAC,EAACC,CAAC,EAAC;IAAE,IAAI,CAACH,GAAG,CAACC,OAAO,CAACC,CAAC,EAACC,CAAC,CAAC;EAAE;EACrCC,SAASA,CAACF,CAAC,EAAC;IAAE,IAAI,CAACF,GAAG,CAACI,SAAS,CAACF,CAAC,CAAC;EAAE;EACrCG,UAAUA,CAAA,EAAE;IAAE,IAAI,CAACL,GAAG,CAACK,UAAU,CAAC,CAAC;EAAE;AACvC,CAAC;;AAED;AACAb,MAAM,CAACc,gBAAgB,CAAC,OAAO,EAAEC,CAAC,IAAI;EACpC,MAAMC,CAAC,GAAGD,CAAC,CAACR,OAAO,IAAI,EAAE;EACzB,IAAIS,CAAC,KAAK,eAAe,IAAIA,CAAC,CAAClB,QAAQ,CAAC,UAAU,CAAC,EAAE;IACnDiB,CAAC,CAACE,cAAc,CAAC,CAAC;IAAEF,CAAC,CAACG,wBAAwB,CAAC,CAAC;EAClD;AACF,CAAC,CAAC;AACFlB,MAAM,CAACc,gBAAgB,CAAC,oBAAoB,EAAEC,CAAC,IAAI;EACjD,MAAMC,CAAC,GAAID,CAAC,CAACI,MAAM,IAAIJ,CAAC,CAACI,MAAM,CAACZ,OAAO,IAAK,EAAE;EAC9C,IAAIS,CAAC,KAAK,eAAe,IAAIA,CAAC,CAAClB,QAAQ,CAAC,UAAU,CAAC,EAAE;IACnDiB,CAAC,CAACE,cAAc,CAAC,CAAC;IAAEF,CAAC,CAACG,wBAAwB,CAAC,CAAC;EAClD;AACF,CAAC,CAAC;;AAEF;AACA,OAAOE,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGJ,UAAU,CAACK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACxDF,IAAI,CAACG,MAAM,cAACJ,OAAA,CAACF,GAAG;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}