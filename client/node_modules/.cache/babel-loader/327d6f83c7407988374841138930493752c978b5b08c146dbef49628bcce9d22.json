{"ast":null,"code":"var _jsxFileName = \"C:\\\\Rohin_Gaudycottonwood\\\\college_personal\\\\projects\\\\Code-Collab\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport SimpleEditor from 'react-simple-code-editor';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  label: 'Python',\n  value: 'python',\n  monaco: 'python'\n}, {\n  label: 'JavaScript',\n  value: 'javascript',\n  monaco: 'javascript'\n}, {\n  label: 'C',\n  value: 'c',\n  monaco: 'c'\n}];\nconst SERVER_PORT = 3001;\nconst SERVER_URL = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\nconst socket = io(SERVER_URL);\nconst ROOM = 'default';\nexport default function App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [running, setRunning] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [language, setLanguage] = useState('python');\n  const [dragging, setDragging] = useState(false);\n  const editorRef = useRef(null);\n  const fileInputRef = useRef(null); // Added null initialization\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  const langConfig = LANGUAGES.find(l => l.value === language) || LANGUAGES[0];\n\n  // Ref to hold the current code value for access in socket listeners\n  const codeRef = useRef(code);\n  useEffect(() => {\n    codeRef.current = code;\n  }, [code]);\n  useEffect(() => {\n    const handleInit = ({\n      code: initialCode,\n      ip\n    }) => {\n      // Using `ip` from server as per original, assuming it's the intended connect address.\n      // If you prefer to show the hostname the client connected to:\n      // const connectAddress = `${window.location.hostname}:${SERVER_PORT}`;\n      const connectAddress = `${ip}:3000`; // Or use SERVER_PORT if 3000 is specific to a different context\n      setCode(`# Connect at http://${connectAddress}\\n\\n` + (initialCode || ''));\n    };\n    const handleCodeUpdate = updatedCode => {\n      // Only update if the received code is different from the current local code.\n      // This prevents overwriting local edits if server echoes changes or if updates are redundant.\n      if (updatedCode !== codeRef.current) {\n        setCode(updatedCode);\n      }\n    };\n    const handleOutput = data => {\n      setOutput(prev => prev + data);\n    };\n    const handleDone = () => {\n      setRunning(false);\n    };\n    const handleFileList = list => {\n      setFiles(list);\n    };\n    socket.emit('join', ROOM);\n    socket.on('init', handleInit);\n    socket.on('code', handleCodeUpdate);\n    socket.on('output', handleOutput);\n    socket.on('done', handleDone);\n    socket.on('file-list', handleFileList);\n    return () => {\n      // Clean up specific listeners\n      socket.off('init', handleInit);\n      socket.off('code', handleCodeUpdate);\n      socket.off('output', handleOutput);\n      socket.off('done', handleDone);\n      socket.off('file-list', handleFileList);\n      // socket.disconnect(); // Disconnect if App component truly unmounts and connection shouldn't persist.\n      // For a single-page app where App is root, this is often fine.\n    };\n  }, [ROOM]); // ROOM is a constant, so effect runs once on mount.\n\n  const handleEditorChange = value => {\n    const newCode = value || ''; // Ensure code is always a string\n    setCode(newCode);\n    socket.emit('code', {\n      room: ROOM,\n      value: newCode\n    });\n  };\n  const handleEditorDidMount = editorInstance => {\n    // Renamed 'editor' to 'editorInstance' for clarity\n    editorRef.current = editorInstance;\n    const resizeListener = () => {\n      if (editorRef.current) {\n        editorRef.current.layout();\n      }\n    };\n    window.addEventListener('resize', resizeListener);\n\n    // Note: If the Editor component itself can unmount independently of the App component\n    // (e.g., if isMobile could change and swap editors), this listener would need cleanup.\n    // For instance, return () => window.removeEventListener('resize', resizeListener);\n    // from a useEffect hook that sets up this specific editor.\n    // However, given onMount, cleanup is trickier. If App unmounts, socket cleanup handles global concerns.\n  };\n  const runCode = () => {\n    setOutput('');\n    setRunning(true);\n    socket.emit('compile', {\n      room: ROOM,\n      code,\n      language\n    });\n  };\n  const uploadFile = async file => {\n    if (!file) return; // Guard against null file\n    const form = new FormData();\n    form.append('file', file);\n    try {\n      await fetch(`${SERVER_URL}/upload`, {\n        method: 'POST',\n        body: form\n      });\n      if (fileInputRef.current) fileInputRef.current.value = ''; // Clear file input\n    } catch (error) {\n      console.error('File upload failed:', error);\n      setOutput(prev => prev + `File upload failed: ${error.message}\\n`);\n    }\n  };\n  const clearFiles = async () => {\n    try {\n      await fetch(`${SERVER_URL}/clear-files`, {\n        method: 'DELETE'\n      });\n      setOutput(''); // Or a success message\n      setFiles([]); // Also clear local file list state\n    } catch (error) {\n      console.error('Clear files failed:', error);\n      setOutput(prev => prev + `Clearing files failed: ${error.message}\\n`);\n    }\n  };\n  const handleDrag = (e, state) => {\n    e.preventDefault();\n    e.stopPropagation(); // Good practice for drag events\n    setDragging(state);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation(); // Good practice\n    setDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      uploadFile(file);\n      e.dataTransfer.clearData(); // Clean up\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-split\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-pane\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            children: LANGUAGES.map(l => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: l.value,\n              children: l.label\n            }, l.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), isMobile ? /*#__PURE__*/_jsxDEV(SimpleEditor, {\n          value: code,\n          onValueChange: handleEditorChange // Assuming SimpleEditor also calls with just the value\n          ,\n          highlight: c => Prism.highlight(c, Prism.languages[language] || Prism.languages.python, language),\n          padding: 12,\n          style: {\n            width: '100%',\n            height: '100%',\n            fontFamily: 'monospace',\n            fontSize: 14\n          }\n          // Consider adding a readOnly prop if `running` is true for SimpleEditor too\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\" // Ensure .editor-pane and its parents have defined heights\n          ,\n          language: langConfig.monaco,\n          value: code,\n          onChange: handleEditorChange,\n          onMount: handleEditorDidMount,\n          theme: \"vs-dark\",\n          options: {\n            automaticLayout: false,\n            // disable Monaco's ResizeObserver, as requested\n            readOnly: running // Optionally make editor read-only while code is running\n            // Add any other Monaco options you need\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-pane\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runCode,\n        disabled: running,\n        children: running ? 'â€¦Running' : 'Run'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: e => uploadFile(e.target.files && e.target.files[0]),\n        style: {\n          marginLeft: '10px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFiles,\n        children: \"Clear Uploads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `shared-files${dragging ? ' drag-over' : ''}`,\n      onDragOver: e => handleDrag(e, true),\n      onDragEnter: e => handleDrag(e, true) // Handle entering the drop zone\n      ,\n      onDragLeave: e => handleDrag(e, false),\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Shared Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), files.length === 0 && !dragging && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files shared yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${SERVER_URL}${f.url}`,\n            download: f.originalname,\n            children: f.originalname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, f.originalname + i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-hint\",\n        children: dragging ? 'Release to upload' : files.length > 0 ? 'Drag & drop another file or use upload button.' : 'Drag & drop a file here, or use the upload button above'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nvbsZX3f22oKAc+GO6R/wOlvlhw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Editor","SimpleEditor","Prism","jsxDEV","_jsxDEV","LANGUAGES","label","value","monaco","SERVER_PORT","SERVER_URL","window","location","protocol","hostname","socket","ROOM","App","_s","code","setCode","output","setOutput","running","setRunning","files","setFiles","language","setLanguage","dragging","setDragging","editorRef","fileInputRef","isMobile","test","navigator","userAgent","langConfig","find","l","codeRef","current","handleInit","initialCode","ip","connectAddress","handleCodeUpdate","updatedCode","handleOutput","data","prev","handleDone","handleFileList","list","emit","on","off","handleEditorChange","newCode","room","handleEditorDidMount","editorInstance","resizeListener","layout","addEventListener","runCode","uploadFile","file","form","FormData","append","fetch","method","body","error","console","message","clearFiles","handleDrag","e","state","preventDefault","stopPropagation","handleDrop","dataTransfer","length","clearData","className","children","onChange","target","map","fileName","_jsxFileName","lineNumber","columnNumber","onValueChange","highlight","c","languages","python","padding","style","width","height","fontFamily","fontSize","onMount","theme","options","automaticLayout","readOnly","onClick","disabled","type","ref","marginLeft","marginRight","onDragOver","onDragEnter","onDragLeave","onDrop","f","i","href","url","download","originalname","_c","$RefreshReg$"],"sources":["C:/Rohin_Gaudycottonwood/college_personal/projects/Code-Collab/client/src/App.js"],"sourcesContent":["// src/App.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport io from 'socket.io-client';\r\nimport Editor from '@monaco-editor/react';\r\nimport SimpleEditor from 'react-simple-code-editor';\r\nimport Prism from 'prismjs';\r\nimport 'prismjs/themes/prism.css';\r\nimport 'prismjs/components/prism-python';\r\nimport 'prismjs/components/prism-javascript';\r\n\r\nconst LANGUAGES = [\r\n  { label: 'Python', value: 'python', monaco: 'python' },\r\n  { label: 'JavaScript', value: 'javascript', monaco: 'javascript' },\r\n  { label: 'C', value: 'c', monaco: 'c' },\r\n];\r\n\r\nconst SERVER_PORT = 3001;\r\nconst SERVER_URL = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\r\nconst socket = io(SERVER_URL);\r\nconst ROOM = 'default';\r\n\r\nexport default function App() {\r\n  const [code, setCode] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [running, setRunning] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [language, setLanguage] = useState('python');\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const editorRef = useRef(null);\r\n  const fileInputRef = useRef(null); // Added null initialization\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n  const langConfig = LANGUAGES.find(l => l.value === language) || LANGUAGES[0];\r\n\r\n  // Ref to hold the current code value for access in socket listeners\r\n  const codeRef = useRef(code);\r\n  useEffect(() => {\r\n    codeRef.current = code;\r\n  }, [code]);\r\n\r\n  useEffect(() => {\r\n    const handleInit = ({ code: initialCode, ip }) => {\r\n      // Using `ip` from server as per original, assuming it's the intended connect address.\r\n      // If you prefer to show the hostname the client connected to:\r\n      // const connectAddress = `${window.location.hostname}:${SERVER_PORT}`;\r\n      const connectAddress = `${ip}:3000`; // Or use SERVER_PORT if 3000 is specific to a different context\r\n      setCode(`# Connect at http://${connectAddress}\\n\\n` + (initialCode || ''));\r\n    };\r\n\r\n    const handleCodeUpdate = (updatedCode) => {\r\n      // Only update if the received code is different from the current local code.\r\n      // This prevents overwriting local edits if server echoes changes or if updates are redundant.\r\n      if (updatedCode !== codeRef.current) {\r\n        setCode(updatedCode);\r\n      }\r\n    };\r\n\r\n    const handleOutput = (data) => {\r\n      setOutput(prev => prev + data);\r\n    };\r\n\r\n    const handleDone = () => {\r\n      setRunning(false);\r\n    };\r\n\r\n    const handleFileList = (list) => {\r\n      setFiles(list);\r\n    };\r\n\r\n    socket.emit('join', ROOM);\r\n    socket.on('init', handleInit);\r\n    socket.on('code', handleCodeUpdate);\r\n    socket.on('output', handleOutput);\r\n    socket.on('done', handleDone);\r\n    socket.on('file-list', handleFileList);\r\n\r\n    return () => {\r\n      // Clean up specific listeners\r\n      socket.off('init', handleInit);\r\n      socket.off('code', handleCodeUpdate);\r\n      socket.off('output', handleOutput);\r\n      socket.off('done', handleDone);\r\n      socket.off('file-list', handleFileList);\r\n      // socket.disconnect(); // Disconnect if App component truly unmounts and connection shouldn't persist.\r\n                           // For a single-page app where App is root, this is often fine.\r\n    };\r\n  }, [ROOM]); // ROOM is a constant, so effect runs once on mount.\r\n\r\n  const handleEditorChange = (value) => {\r\n    const newCode = value || ''; // Ensure code is always a string\r\n    setCode(newCode);\r\n    socket.emit('code', { room: ROOM, value: newCode });\r\n  };\r\n\r\n  const handleEditorDidMount = (editorInstance) => { // Renamed 'editor' to 'editorInstance' for clarity\r\n    editorRef.current = editorInstance;\r\n    const resizeListener = () => {\r\n      if (editorRef.current) {\r\n        editorRef.current.layout();\r\n      }\r\n    };\r\n    window.addEventListener('resize', resizeListener);\r\n\r\n    // Note: If the Editor component itself can unmount independently of the App component\r\n    // (e.g., if isMobile could change and swap editors), this listener would need cleanup.\r\n    // For instance, return () => window.removeEventListener('resize', resizeListener);\r\n    // from a useEffect hook that sets up this specific editor.\r\n    // However, given onMount, cleanup is trickier. If App unmounts, socket cleanup handles global concerns.\r\n  };\r\n\r\n  const runCode = () => {\r\n    setOutput('');\r\n    setRunning(true);\r\n    socket.emit('compile', { room: ROOM, code, language });\r\n  };\r\n\r\n  const uploadFile = async (file) => {\r\n    if (!file) return; // Guard against null file\r\n    const form = new FormData();\r\n    form.append('file', file);\r\n    try {\r\n      await fetch(`${SERVER_URL}/upload`, { method: 'POST', body: form });\r\n      if (fileInputRef.current) fileInputRef.current.value = ''; // Clear file input\r\n    } catch (error) {\r\n      console.error('File upload failed:', error);\r\n      setOutput(prev => prev + `File upload failed: ${error.message}\\n`);\r\n    }\r\n  };\r\n\r\n  const clearFiles = async () => {\r\n    try {\r\n      await fetch(`${SERVER_URL}/clear-files`, { method: 'DELETE' });\r\n      setOutput(''); // Or a success message\r\n      setFiles([]); // Also clear local file list state\r\n    } catch (error) {\r\n      console.error('Clear files failed:', error);\r\n      setOutput(prev => prev + `Clearing files failed: ${error.message}\\n`);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e, state) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Good practice for drag events\r\n    setDragging(state);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Good practice\r\n    setDragging(false);\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      const file = e.dataTransfer.files[0];\r\n      uploadFile(file);\r\n      e.dataTransfer.clearData(); // Clean up\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top-split\">\r\n        <div className=\"editor-pane\">\r\n          <div className=\"controls\">\r\n            <select value={language} onChange={e => setLanguage(e.target.value)}>\r\n              {LANGUAGES.map(l =>\r\n                <option key={l.value} value={l.value}>{l.label}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          {isMobile ? (\r\n            <SimpleEditor\r\n              value={code}\r\n              onValueChange={handleEditorChange} // Assuming SimpleEditor also calls with just the value\r\n              highlight={c => Prism.highlight(c, Prism.languages[language] || Prism.languages.python, language)}\r\n              padding={12}\r\n              style={{ width: '100%', height: '100%', fontFamily: 'monospace', fontSize: 14 }}\r\n              // Consider adding a readOnly prop if `running` is true for SimpleEditor too\r\n            />\r\n          ) : (\r\n            <Editor\r\n              height=\"100%\" // Ensure .editor-pane and its parents have defined heights\r\n              language={langConfig.monaco}\r\n              value={code}\r\n              onChange={handleEditorChange}\r\n              onMount={handleEditorDidMount}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                automaticLayout: false, // disable Monaco's ResizeObserver, as requested\r\n                readOnly: running,      // Optionally make editor read-only while code is running\r\n                // Add any other Monaco options you need\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"output-pane\">\r\n          <pre>{output}</pre>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={runCode} disabled={running}>\r\n          {running ? 'â€¦Running' : 'Run'}\r\n        </button>\r\n        <input type=\"file\" ref={fileInputRef} onChange={e => uploadFile(e.target.files && e.target.files[0])} style={{ marginLeft: '10px', marginRight: '10px' }}/>\r\n        <button onClick={clearFiles}>Clear Uploads</button>\r\n      </div>\r\n\r\n      <div\r\n        className={`shared-files${dragging ? ' drag-over' : ''}`}\r\n        onDragOver={e => handleDrag(e, true)}\r\n        onDragEnter={e => handleDrag(e, true)} // Handle entering the drop zone\r\n        onDragLeave={e => handleDrag(e, false)}\r\n        onDrop={handleDrop}\r\n      >\r\n        <h4>Shared Files</h4>\r\n        {files.length === 0 && !dragging && <p>No files shared yet.</p>}\r\n        <ul>\r\n          {files.map((f, i) =>\r\n            <li key={f.originalname + i}> {/* Use a more stable key if possible */}\r\n              <a href={`${SERVER_URL}${f.url}`} download={f.originalname}>{f.originalname}</a>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <p className=\"drop-hint\">\r\n          {dragging ? 'Release to upload' : (files.length > 0 ? 'Drag & drop another file or use upload button.' : 'Drag & drop a file here, or use the upload button above')}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}